@startuml Level_2_Property_Inquiry_Process

title Level 2 Data Flow: Property Inquiry and Messaging Process

!define PROCESS_COLOR #E3F2FD
!define DATASTORE_COLOR #F3E5F5
!define EXTERNAL_COLOR #E8F5E8

== External Entities ==
actor "Customer" as customer #External_COLOR
actor "Property Agent" as agent #External_COLOR
cloud "WebSocket Service" as websocket #External_COLOR
cloud "Email Service" as email_service #External_COLOR

== Level 2: Property Inquiry Process Breakdown ==
rectangle "4.1\nValidate\nInquiry" as validate_inquiry #PROCESS_COLOR
rectangle "4.2\nCreate\nMessage" as create_message #PROCESS_COLOR
rectangle "4.3\nNotify\nAgent" as notify_agent #PROCESS_COLOR
rectangle "4.4\nManage\nConversation" as manage_conversation #PROCESS_COLOR
rectangle "4.5\nProcess\nAgent Response" as process_response #PROCESS_COLOR

== Data Stores ==
cylinder "D2: Properties" as property_db #DATASTORE_COLOR
cylinder "D3: Messages" as message_db #DATASTORE_COLOR
cylinder "D1: Users" as user_db #DATASTORE_COLOR
cylinder "D6: Notifications" as notification_db #DATASTORE_COLOR
cylinder "D7: Message Templates" as template_db #DATASTORE_COLOR

== Detailed Data Flows ==

=== Customer Inquiry Initiation ===
customer --> validate_inquiry : Property ID\nMessage content\nUser session
validate_inquiry <--> property_db : Property validation\nAgent lookup
validate_inquiry <--> user_db : User authentication\nPermission check
validate_inquiry --> create_message : Validated inquiry data
validate_inquiry --> customer : Validation errors (if any)

=== Message Creation Process ===
create_message <--> message_db : Store message\nCreate thread
create_message <--> property_db : Update inquiry count\nLink to property
create_message --> notify_agent : New message event\nAgent details
create_message --> customer : Message confirmation\nThread ID

=== Agent Notification Process ===
notify_agent <--> user_db : Agent contact info\nNotification preferences
notify_agent <--> notification_db : Create notification\nUpdate counters
notify_agent <--> template_db : Email templates\nMessage formatting
notify_agent --> websocket : Real-time notification\nAgent session
notify_agent --> email_service : Email notification\nAgent email
notify_agent --> agent : Notification delivery\n(multiple channels)

=== Conversation Management ===
customer --> manage_conversation : View messages\nSend follow-ups
agent --> manage_conversation : View inquiries\nSend responses
manage_conversation <--> message_db : Message retrieval\nThread management
manage_conversation <--> user_db : Participant verification\nPermission checks
manage_conversation --> customer : Message history\nNew messages
manage_conversation --> agent : Customer inquiries\nConversation context
manage_conversation --> process_response : Agent response trigger

=== Agent Response Processing ===
process_response <--> message_db : Store agent reply\nUpdate thread status
process_response <--> notification_db : Customer notification\nRead receipts
process_response --> websocket : Real-time customer update
process_response --> email_service : Customer email notification
process_response --> customer : Agent response notification
process_response --> agent : Response confirmation

== Data Flow Details ==

note top of validate_inquiry
**Validation Process:**
• User authentication status
• Property availability check
• Rate limiting validation
• Content filtering (spam detection)
• Agent availability verification
end note

note top of create_message
**Message Storage:**
• Encrypted message content
• Timestamp and metadata
• Thread creation/linking
• Property context preservation
• User privacy compliance
end note

note top of notify_agent
**Multi-channel Notification:**
• Real-time WebSocket push
• Email notification (configurable)
• SMS notification (optional)
• In-app notification badge
• Mobile push notification
end note

note top of manage_conversation
**Conversation Features:**
• Message threading
• Read/unread status
• Message search capability
• File attachment support
• Conversation archiving
end note

note top of process_response
**Response Processing:**
• Agent identity verification
• Auto-response detection
• Customer notification routing
• Analytics data collection
• Follow-up scheduling
end note

== Error Handling Flows ==
validate_inquiry --> customer : Authentication required\nProperty unavailable
create_message --> customer : Message creation failed\nDatabase error
notify_agent --> admin : Notification delivery failed\nAgent contact error
manage_conversation --> customer : Access denied\nThread not found
process_response --> agent : Response delivery failed\nCustomer contact error

@enduml
