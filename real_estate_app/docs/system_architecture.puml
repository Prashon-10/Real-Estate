@startuml System_Architecture

!theme plain
skinparam componentStyle rectangle
skinparam linetype ortho

title Real Estate Application - System Architecture

package "Frontend Layer" {
    [Web Browser] as browser
    [Bootstrap UI] as ui
    [JavaScript/AJAX] as js
    
    browser --> ui
    ui --> js
}

package "Application Layer" {
    package "Django Apps" {
        [Accounts App] as accounts
        [Properties App] as properties
        [Search App] as search
        [Core App] as core
    }
    
    [Django Views] as views
    [Django Templates] as templates
    [URL Routing] as urls
    [Django Forms] as forms
    [Authentication] as auth
}

package "AI/ML Layer" {
    [Sentence Transformers] as transformers
    [Scikit-learn] as sklearn
    [Recommendation Engine] as recommender
    [Semantic Search] as semantic
    
    transformers --> semantic
    sklearn --> recommender
}

package "Real-time Layer" {
    [Django Channels] as channels
    [WebSocket Handlers] as websockets
    [Redis Channel Layer] as redis_channels
    
    channels --> websockets
    websockets --> redis_channels
}

package "Data Layer" {
    database "SQLite/PostgreSQL" as db {
        [User Tables] as user_tables
        [Property Tables] as property_tables
        [Search Tables] as search_tables
        [Message Tables] as message_tables
    }
    
    [Media Files] as media
    [Static Files] as static
}

package "External Services" {
    [Redis Cache] as redis
    [File Storage] as storage
    [Email Service] as email
}

' Frontend to Application
browser --> views : HTTP Requests
js --> views : AJAX Calls
views --> templates : Render
templates --> browser : HTML Response

' Application Internal
urls --> views
views --> forms
views --> auth
accounts --> auth
properties --> views
search --> views
core --> views

' AI Integration
search --> transformers : Semantic Analysis
search --> sklearn : Similarity Calculation
search --> recommender : Generate Recommendations

' Real-time Communication
views --> channels : WebSocket Upgrade
channels --> redis_channels : Message Routing

' Data Access
views --> db : ORM Queries
accounts --> user_tables
properties --> property_tables
search --> search_tables
channels --> message_tables

' External Dependencies
channels --> redis : Channel Layer
views --> storage : File Upload
auth --> email : Password Reset
views --> media : Image Serving
browser --> static : Asset Loading

note top of browser
  **Client Side**
  - Responsive Design
  - AJAX Interactions
  - Real-time Updates
  - File Uploads
end note

note right of transformers
  **AI Features**
  - Natural Language Processing
  - Vector Embeddings
  - Semantic Understanding
  - Property Matching
end note

note bottom of db
  **Data Persistence**
  - User Management
  - Property Catalog
  - Search History
  - Recommendations
  - Messages
end note

note left of redis
  **Caching & Real-time**
  - Session Storage
  - Channel Layer
  - Message Queue
  - Performance Optimization
end note

@enduml
