@startuml Property_Management_Sequence

title Agent Property Management Process

actor Agent as agent
participant "Frontend (React)" as frontend
participant "Core Views" as core
participant "Property Controller (API)" as property_api
participant "Image Controller (API)" as image_api
participant "Property (Model)" as property_model
participant "PropertyImage (Model)" as image_model
participant "User (Model)" as user_model
database "Database" as db

== Create New Property Listing ==
agent -> frontend : Visit "Add Property" Page
frontend -> core : GET /properties/create/
core -> property_api : checkAgentPermission()
property_api -> user_model : verify user is agent
user_model -> db : Query user type
db --> user_model : User data
user_model --> property_api : Agent verified
property_api --> core : Permission granted
core --> frontend : Show property form
frontend --> agent : Display Property Form

== Submit Property Details ==
agent -> frontend : Fill form and upload images
frontend -> property_api : POST /properties/create/
property_api -> property_model : create(agent, title, address, price, details)
property_model -> db : INSERT INTO properties
db --> property_model : Property ID
property_model --> property_api : Return new property

== Upload Property Images ==
property_api -> image_api : uploadImages(property_id, images[])
loop For each uploaded image
    image_api -> image_model : create(property, image, order)
    image_model -> db : INSERT INTO property_images
    db --> image_model : Image saved
    image_model --> image_api : Image confirmation
end
image_api --> property_api : All images uploaded

== Finalize Property Listing ==
property_api -> property_model : updateStatus(property_id, "available")
property_model -> db : UPDATE property SET status='available'
db --> property_model : Status updated
property_model --> property_api : Property activated
property_api --> frontend : Property creation success
frontend --> agent : Show "Property Listed Successfully"

== Update Property Status ==
agent -> frontend : Change property status
frontend -> property_api : POST /properties/{id}/update-status/
property_api -> property_model : updateStatus(id, new_status)
property_model -> db : UPDATE property SET status=new_status
alt If status is "sold"
    property_model -> db : DELETE FROM favorites WHERE property_id=id
    db --> property_model : Favorites removed
end
db --> property_model : Status updated
property_model --> property_api : Update confirmation
property_api --> frontend : Status change success
frontend --> agent : Show Status Updated

== View Property Performance ==
agent -> frontend : Visit "My Properties" Dashboard
frontend -> property_api : GET /properties/agent/{agent_id}/analytics
property_api -> property_model : getAgentProperties(agent_id)
property_model -> db : Query properties with stats
db --> property_model : Properties with view counts, messages
property_model --> property_api : Property analytics
property_api --> frontend : JSON response with analytics
frontend --> agent : Display Property Performance Dashboard

@enduml
