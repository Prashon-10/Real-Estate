@startuml Real_Estate_Class_Objects_Refined

!theme plain
skinparam backgroundColor white
skinparam classFontSize 11
skinparam classAttributeFontSize 10
skinparam classOperationFontSize 10
skinparam classBorderThickness 1.5
skinparam classBorderColor #2c3e50
skinparam classBackgroundColor #ecf0f1
skinparam classHeaderBackgroundColor #3498db
skinparam classHeaderFontColor white
skinparam arrowThickness 1.5
skinparam arrowColor #34495e

title Refined Classes and Objects - Real Estate Application

package "User Management" {
  class User {
    - id: Integer
    - username: String
    - email: String
    - user_type: String
    - profile_image: ImageField
    - unique_key: String
    - phone_number: String
    - bio: TextField
    - date_joined: DateTime
    + is_agent(): Boolean
    + is_customer(): Boolean
    + is_admin_user(): Boolean
    + __str__(): String
  }
  
  enum UserType {
    CUSTOMER
    AGENT
    ADMIN
  }
}

package "Property Management" {
  class Property {
    - id: Integer
    - title: String
    - address: String
    - price: Decimal
    - bedrooms: PositiveInteger
    - bathrooms: Decimal
    - square_footage: PositiveInteger
    - description: TextField
    - status: String
    - agent_id: ForeignKey
    - created_at: DateTime
    - updated_at: DateTime
    + __str__(): String
    + get_absolute_url(): String
  }
  
  class PropertyImage {
    - id: Integer
    - property_id: ForeignKey
    - image: ImageField
    - order: PositiveInteger
    + __str__(): String
  }
  
  enum PropertyStatus {
    AVAILABLE
    SOLD
    PENDING
  }
  
  class Favorite {
    - id: Integer
    - user_id: ForeignKey
    - property_id: ForeignKey
    - added_at: DateTime
    + __str__(): String
  }
  
  class PropertyMessage {
    - id: Integer
    - property_id: ForeignKey
    - sender_id: ForeignKey
    - content: TextField
    - timestamp: DateTime
    - read: Boolean
    + __str__(): String
    + mark_as_read(): void
  }
}

package "Search & Analytics" {
  class SearchHistory {
    - id: Integer
    - user_id: ForeignKey
    - query: TextField
    - property_id: ForeignKey
    - timestamp: DateTime
    + __str__(): String
  }
  
  class Recommendation {
    - id: Integer
    - user_id: ForeignKey
    - property_id: ForeignKey
    - score: Float
    - created_at: DateTime
    + __str__(): String
    + calculate_relevance(): Float
  }
}

package "Example Objects" {
  object johnDoe : User {
    id = 1
    username = "john_doe"
    email = "john@example.com"
    user_type = "customer"
    phone_number = "555-0123"
  }
  
  object sarahAgent : User {
    id = 2
    username = "sarah_agent"
    email = "sarah@realty.com"
    user_type = "agent"
    phone_number = "555-0456"
  }
  
  object luxuryHome : Property {
    id = 101
    title = "Luxury Downtown Condo"
    address = "123 Main St, City"
    price = 450000.00
    bedrooms = 3
    bathrooms = 2.5
    status = "available"
  }
  
  object propertyInquiry : PropertyMessage {
    id = 501
    content = "Interested in viewing"
    timestamp = "2025-01-15 10:30:00"
    read = false
  }
}

' Relationships
User ||--o{ Property : "agent manages"
User ||--o{ Favorite : "user favorites"
User ||--o{ PropertyMessage : "sender"
User ||--o{ SearchHistory : "searches"
User ||--o{ Recommendation : "receives"

Property ||--o{ PropertyImage : "has images"
Property ||--o{ Favorite : "favorited by"
Property ||--o{ PropertyMessage : "receives messages"
Property ||--o{ SearchHistory : "viewed in search"
Property ||--o{ Recommendation : "recommended"

Property -- PropertyStatus : "has status"
User -- UserType : "has type"

' Object relationships
johnDoe --> propertyInquiry : "sends"
sarahAgent --> luxuryHome : "manages"
luxuryHome --> propertyInquiry : "receives"

@enduml
